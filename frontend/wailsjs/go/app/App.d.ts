// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {models} from '../models';
import {update} from '../models';
import {app} from '../models';
import {mqtt} from '../models';
import {context} from '../models';

export function AddSubscription(arg1:number):Promise<models.Subscription>;

export function CheckForUpdates():Promise<update.UpdateResponse>;

export function ChooseCertFile(arg1:string):Promise<string>;

export function ChooseDirectory(arg1:string):Promise<string>;

export function ClearConnectionHistory(arg1:number):Promise<void>;

export function ConnectMqtt(arg1:number):Promise<void>;

export function DeleteConnection(arg1:number):Promise<void>;

export function DeleteFilterHistoryEntry(arg1:number,arg2:string):Promise<void>;

export function DeletePublishHistoryEntry(arg1:number):Promise<void>;

export function DeleteRetainedMessage(arg1:number,arg2:string):Promise<void>;

export function DeleteSubscription(arg1:number,arg2:number):Promise<void>;

export function DisconnectMqtt(arg1:number):Promise<void>;

export function GetAllConnections():Promise<app.Connections>;

export function GetAllSubscriptionsByConnectionId():Promise<{[key: number]: Array<models.Subscription>}>;

export function GetEnvInfo():Promise<app.EnvInfo>;

export function GetFilterHistoriesForConnection(arg1:number):Promise<Array<models.FilterHistory>>;

export function GetMatchingSubscriptionForTopic(arg1:number,arg2:string):Promise<models.Subscription>;

export function GetMessageHistory(arg1:number,arg2:string):Promise<Array<mqtt.MqttMessage>>;

export function GetMqttStats():Promise<app.MqttStats>;

export function GetPanelSizes():Promise<Array<models.PanelSize>>;

export function GetPublishHistoriesForConnection(arg1:number):Promise<Array<models.PublishHistory>>;

export function GetSortStates():Promise<Array<models.SortState>>;

export function LoadOpenTabs():Promise<Array<models.Tab>>;

export function NewConnection():Promise<app.Connection>;

export function PublishMqtt(arg1:number,arg2:app.PublishParams):Promise<void>;

export function SaveFilterHistoryEntry(arg1:number,arg2:string):Promise<models.FilterHistory>;

export function SavePublishHistoryEntry(arg1:app.SavePublishHistoryEntryParams):Promise<models.PublishHistory>;

export function StartUpdate():Promise<void>;

export function Startup(arg1:context.Context,arg2:app.StartupOptions):Promise<void>;

export function UpdateConnection(arg1:models.Connection):Promise<void>;

export function UpdateOpenConnectionTabs(arg1:Array<number>):Promise<void>;

export function UpdatePanelSize(arg1:string,arg2:number,arg3:boolean):Promise<void>;

export function UpdateSortState(arg1:string,arg2:string,arg3:string):Promise<void>;

export function UpdateSubscription(arg1:number,arg2:models.Subscription):Promise<models.Subscription>;
